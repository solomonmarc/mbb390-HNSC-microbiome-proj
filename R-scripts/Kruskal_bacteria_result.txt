
> 
> 
> # Load required libraries
> library(tidyr)
> library(dplyr)
> library(ggplot2)
> 
> # Specify the names of the top bacteria and their corresponding colors
> top_bacteria_colors <- c("Bacteroides" = "#E41A1C", "Pseudomonas" = "#377EB8", "Terrabacter" = "#4DAF4A")
> 
> # Specify the names of the top bacteria
> top_bacteria_names <- c("Bacteroides", "Pseudomonas", "Terrabacter")
> 
> # Combine the data for all three bacteria into a single data frame
> combined_data <- data.frame(
+     Bacteria = rep(top_bacteria_names, each = nrow(data)),
+     Abundance = c(data$Bacteroides, data$Pseudomonas, data$Terrabacter),
+     Stage = rep(data$Stage, times = 3)
+ )
> 
> # Remove rows with NAs
> combined_data <- na.omit(combined_data)
> 
> # Check the number of rows in the combined data after removing NAs
> print(paste("Number of rows after removing NAs: ", nrow(combined_data)))
[1] "Number of rows after removing NAs:  63"
> 
> # Filter out rows with missing values in the Stage column
> combined_data <- combined_data[!is.na(combined_data$Stage), ]
> 
> # Check the number of rows after filtering
> print(paste("Number of rows after filtering: ", nrow(combined_data)))
[1] "Number of rows after filtering:  63"
> 
> # Create a folder to save the plot and data
> dir.create("boxplots", showWarnings = FALSE)
> 
> # Perform Kruskal-Wallis test and save p-values
> kruskal_results <- combined_data %>%
+     group_by(Bacteria) %>%
+     summarize(
+         avg_abundance = mean(Abundance, na.rm = TRUE),
+         kruskal_p_value = kruskal.test(Abundance ~ Stage)$p.value
+     )
> 
> # Apply Bonferroni correction
> kruskal_results$bonferroni_p_value <- p.adjust(kruskal_results$kruskal_p_value, method = "bonferroni")
> 
> # Save the data with p-values to a CSV file
> write.csv(
+     kruskal_results,
+     "boxplots/kruskal_results_with_p_values.csv",
+     row.names = FALSE
+ )
> 
> # Print the Kruskal-Wallis results
> print(kruskal_results)
# A tibble: 3 × 4
  Bacteria    avg_abundance kruskal_p_value bonferroni_p_value
  <chr>               <dbl>           <dbl>              <dbl>
1 Bacteroides          16.8           0.348              1    
2 Pseudomonas          17.1           0.131              0.394
3 Terrabacter          17.3           0.938              1    
> 
> # Create a grouped boxplot with y-axis as relative abundance
> p <- ggplot(combined_data, aes(x = Stage, y = Abundance, fill = Bacteria)) +
+     geom_boxplot() +
+     labs(
+         title = "Grouped Boxplot for Bacteria in Tongue by Tumor Stage",
+         y = "Relative Abundance",
+         x = "Tumor Stage"
+     ) +
+     scale_fill_manual(values = top_bacteria_colors) +  # Assign specified colors
+     geom_text(
+         aes(x = 2, y = max(combined_data$Abundance) * 0.9, 
+             label = paste("p =", round(kruskal_results$bonferroni_p_value[1], 4))),
+         vjust = -19,  # Adjust the vertical position
+         size = 4,
+         color = "black"
+     )
> 
> # Save the grouped boxplot as a PNG file
> ggsave(
+     p,
+     file = "bacteria_tongue_boxplots/grouped_boxplot_relative_abundance.png",
+     width = 10,
+     height = 6,
+     dpi = 300
+ )
> 
> 
> library(readr)
> top_bacteria_mouth_genus <- read_csv("Top microbes/top_bacteria_mouth_genus.csv")
Rows: 79 Columns: 5                                                                                                  
── Column specification ──────────────────────────────────────────────────────────
Delimiter: ","
chr (2): Sample_Number, Stage
dbl (3): Bacteroides, Pseudomonas, Terrabacter

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> View(top_bacteria_mouth_genus)
> data <- top_bacteria_mouth_genus
> # Load required libraries
> library(tidyr)
> library(dplyr)
> library(ggplot2)
> 
> # Specify the names of the top bacteria and their corresponding colors
> top_bacteria_colors <- c("Bacteroides" = "#E41A1C", "Pseudomonas" = "#377EB8", "Terrabacter" = "#4DAF4A")
> 
> # Specify the names of the top bacteria
> top_bacteria_names <- c("Bacteroides", "Pseudomonas", "Terrabacter")
> 
> # Combine the data for all three bacteria into a single data frame
> combined_data <- data.frame(
+     Bacteria = rep(top_bacteria_names, each = nrow(data)),
+     Abundance = c(data$Bacteroides, data$Pseudomonas, data$Terrabacter),
+     Stage = rep(data$Stage, times = 3)
+ )
> 
> # Remove rows with NAs
> combined_data <- na.omit(combined_data)
> 
> # Check the number of rows in the combined data after removing NAs
> print(paste("Number of rows after removing NAs: ", nrow(combined_data)))
[1] "Number of rows after removing NAs:  216"
> 
> # Filter out rows with missing values in the Stage column
> combined_data <- combined_data[!is.na(combined_data$Stage), ]
> 
> # Check the number of rows after filtering
> print(paste("Number of rows after filtering: ", nrow(combined_data)))
[1] "Number of rows after filtering:  216"
> 
> # Create a folder to save the plot and data
> dir.create("boxplots", showWarnings = FALSE)
> 
> # Perform Kruskal-Wallis test and save p-values
> kruskal_results <- combined_data %>%
+     group_by(Bacteria) %>%
+     summarize(
+         avg_abundance = mean(Abundance, na.rm = TRUE),
+         kruskal_p_value = kruskal.test(Abundance ~ Stage)$p.value
+     )
> 
> # Apply Bonferroni correction
> kruskal_results$bonferroni_p_value <- p.adjust(kruskal_results$kruskal_p_value, method = "bonferroni")
> 
> # Save the data with p-values to a CSV file
> write.csv(
+     kruskal_results,
+     "boxplots/kruskal_results_with_p_values.csv",
+     row.names = FALSE
+ )
> 
> # Print the Kruskal-Wallis results
> print(kruskal_results)
# A tibble: 3 × 4
  Bacteria    avg_abundance kruskal_p_value bonferroni_p_value
  <chr>               <dbl>           <dbl>              <dbl>
1 Bacteroides          16.8         0.796               1     
2 Pseudomonas          17.8         0.964               1     
3 Terrabacter          17.4         0.00693             0.0208
> 
> # Create a grouped boxplot with y-axis as relative abundance
> p <- ggplot(combined_data, aes(x = Stage, y = Abundance, fill = Bacteria)) +
+     geom_boxplot() +
+     labs(
+         title = "Grouped Boxplot for Bacteria in Mouth by Tumor Stage",
+         y = "Relative Abundance",
+         x = "Tumor Stage"
+     ) +
+     scale_fill_manual(values = top_bacteria_colors) +  # Assign specified colors
+     geom_text(
+         aes(x = 2, y = max(combined_data$Abundance) * 0.9, 
+             label = paste("p =", round(kruskal_results$bonferroni_p_value[1], 4))),
+         vjust = -19,  # Adjust the vertical position
+         size = 4,
+         color = "black"
+     )
> 
> # Save the grouped boxplot as a PNG file
> ggsave(
+     p,
+     file = "bacteria_mouth_boxplots/grouped_boxplot_relative_abundance.png",
+     width = 10,
+     height = 6,
+     dpi = 300
+ )
> 
> 
> # Load required libraries
> library(tidyr)
> library(dplyr)
> library(ggplot2)
> 
> # Specify the names of the top bacteria and their corresponding colors
> top_bacteria_colors <- c("Bacteroides" = "#E41A1C", "Pseudomonas" = "#377EB8", "Terrabacter" = "#4DAF4A")
> 
> # Specify the names of the top bacteria
> top_bacteria_names <- c("Bacteroides", "Pseudomonas", "Terrabacter")
> 
> # Combine the data for all three bacteria into a single data frame
> combined_data <- data.frame(
+     Bacteria = rep(top_bacteria_names, each = nrow(data)),
+     Abundance = c(data$Bacteroides, data$Pseudomonas, data$Terrabacter),
+     Stage = rep(data$Stage, times = 3)
+ )
> 
> # Remove rows with NAs
> combined_data <- na.omit(combined_data)
> 
> # Check the number of rows in the combined data after removing NAs
> print(paste("Number of rows after removing NAs: ", nrow(combined_data)))
[1] "Number of rows after removing NAs:  216"
> 
> # Filter out rows with missing values in the Stage column
> combined_data <- combined_data[!is.na(combined_data$Stage), ]
> 
> # Check the number of rows after filtering
> print(paste("Number of rows after filtering: ", nrow(combined_data)))
[1] "Number of rows after filtering:  216"
> 
> # Create a folder to save the plot and data
> dir.create("boxplots", showWarnings = FALSE)
> 
> # Perform Kruskal-Wallis test and save p-values
> kruskal_results <- combined_data %>%
+     group_by(Bacteria) %>%
+     summarize(
+         avg_abundance = mean(Abundance, na.rm = TRUE),
+         kruskal_p_value = kruskal.test(Abundance ~ Stage)$p.value
+     )
> 
> # Apply Bonferroni correction
> kruskal_results$bonferroni_p_value <- p.adjust(kruskal_results$kruskal_p_value, method = "bonferroni")
> 
> # Save the data with p-values to a CSV file
> write.csv(
+     kruskal_results,
+     "boxplots/kruskal_results_with_p_values.csv",
+     row.names = FALSE
+ )
> 
> # Print the Kruskal-Wallis results
> print(kruskal_results)
# A tibble: 3 × 4
  Bacteria    avg_abundance kruskal_p_value bonferroni_p_value
  <chr>               <dbl>           <dbl>              <dbl>
1 Bacteroides          16.8         0.796               1     
2 Pseudomonas          17.8         0.964               1     
3 Terrabacter          17.4         0.00693             0.0208
> 
> # Create a grouped boxplot with y-axis as relative abundance
> p <- ggplot(combined_data, aes(x = Stage, y = Abundance, fill = Bacteria)) +
+     geom_boxplot() +
+     labs(
+         title = "Grouped Boxplot for Bacteria in Mouth by Tumor Stage",
+         y = "Relative Abundance",
+         x = "Tumor Stage"
+     ) +
+     scale_fill_manual(values = top_bacteria_colors) +  # Assign specified colors
+     geom_text(
+         aes(x = 2, y = max(combined_data$Abundance) * 0.9, 
+             label = paste("p =", round(kruskal_results$bonferroni_p_value[1], 4))),
+         vjust = -3,  # Adjust the vertical position
+         size = 4,
+         color = "black"
+     )
> 
> # Save the grouped boxplot as a PNG file
> ggsave(
+     p,
+     file = "bacteria_mouth_boxplots/grouped_boxplot_relative_abundance.png",
+     width = 10,
+     height = 6,
+     dpi = 300
+ )
> 
> 
> library(readr)
> top_bacteria_larynx_genus <- read_csv("Top microbes/top_bacteria_larynx_genus.csv")
Rows: 174 Columns: 5                                                                                                 
── Column specification ──────────────────────────────────────────────────────────
Delimiter: ","
chr (2): Sample_Number, Stage
dbl (3): Bacteroides, Pseudomonas, Terrabacter

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> View(top_bacteria_larynx_genus)
> data <- top_bacteria_larynx_genus
> # Load required libraries
> library(tidyr)
> library(dplyr)
> library(ggplot2)
> 
> # Specify the names of the top bacteria and their corresponding colors
> top_bacteria_colors <- c("Bacteroides" = "#E41A1C", "Pseudomonas" = "#377EB8", "Terrabacter" = "#4DAF4A")
> 
> # Specify the names of the top bacteria
> top_bacteria_names <- c("Bacteroides", "Pseudomonas", "Terrabacter")
> 
> # Combine the data for all three bacteria into a single data frame
> combined_data <- data.frame(
+     Bacteria = rep(top_bacteria_names, each = nrow(data)),
+     Abundance = c(data$Bacteroides, data$Pseudomonas, data$Terrabacter),
+     Stage = rep(data$Stage, times = 3)
+ )
> 
> # Remove rows with NAs
> combined_data <- na.omit(combined_data)
> 
> # Check the number of rows in the combined data after removing NAs
> print(paste("Number of rows after removing NAs: ", nrow(combined_data)))
[1] "Number of rows after removing NAs:  450"
> 
> # Filter out rows with missing values in the Stage column
> combined_data <- combined_data[!is.na(combined_data$Stage), ]
> 
> # Check the number of rows after filtering
> print(paste("Number of rows after filtering: ", nrow(combined_data)))
[1] "Number of rows after filtering:  450"
> 
> # Create a folder to save the plot and data
> dir.create("boxplots", showWarnings = FALSE)
> 
> # Perform Kruskal-Wallis test and save p-values
> kruskal_results <- combined_data %>%
+     group_by(Bacteria) %>%
+     summarize(
+         avg_abundance = mean(Abundance, na.rm = TRUE),
+         kruskal_p_value = kruskal.test(Abundance ~ Stage)$p.value
+     )
> 
> # Apply Bonferroni correction
> kruskal_results$bonferroni_p_value <- p.adjust(kruskal_results$kruskal_p_value, method = "bonferroni")
> 
> # Save the data with p-values to a CSV file
> write.csv(
+     kruskal_results,
+     "boxplots/kruskal_results_with_p_values.csv",
+     row.names = FALSE
+ )
> 
> # Print the Kruskal-Wallis results
> print(kruskal_results)
# A tibble: 3 × 4
  Bacteria    avg_abundance kruskal_p_value bonferroni_p_value
  <chr>               <dbl>           <dbl>              <dbl>
1 Bacteroides          17.0           0.663              1    
2 Pseudomonas          17.5           0.569              1    
3 Terrabacter          17.6           0.267              0.800
> 
> # Create a grouped boxplot with y-axis as relative abundance
> p <- ggplot(combined_data, aes(x = Stage, y = Abundance, fill = Bacteria)) +
+     geom_boxplot() +
+     labs(
+         title = "Grouped Boxplot for Bacteria in Larynx by Tumor Stage",
+         y = "Relative Abundance",
+         x = "Tumor Stage"
+     ) +
+     scale_fill_manual(values = top_bacteria_colors) +  # Assign specified colors
+     geom_text(
+         aes(x = 2, y = max(combined_data$Abundance) * 0.9, 
+             label = paste("p =", round(kruskal_results$bonferroni_p_value[1], 4))),
+         vjust = -3,  # Adjust the vertical position
+         size = 4,
+         color = "black"
+     )
> 
> # Save the grouped boxplot as a PNG file
> ggsave(
+     p,
+     file = "bacteria_larynx_boxplots/grouped_boxplot_relative_abundance.png",
+     width = 10,
+     height = 6,
+     dpi = 300
+ )
> 
> 
> library(readr)
> top_bacteria_gum_genus <- read_csv("Top microbes/top_bacteria_gum_genus.csv")
Rows: 19 Columns: 5                                                                                                  
── Column specification ──────────────────────────────────────────────────────────
Delimiter: ","
chr (2): Sample_Number, Stage
dbl (3): Bacteroides, Pseudomonas, Terrabacter

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> View(top_bacteria_gum_genus)
> data <- top_bacteria_gum_genus
> # Load required libraries
> library(tidyr)
> library(dplyr)
> library(ggplot2)
> 
> # Specify the names of the top bacteria and their corresponding colors
> top_bacteria_colors <- c("Bacteroides" = "#E41A1C", "Pseudomonas" = "#377EB8", "Terrabacter" = "#4DAF4A")
> 
> # Specify the names of the top bacteria
> top_bacteria_names <- c("Bacteroides", "Pseudomonas", "Terrabacter")
> 
> # Combine the data for all three bacteria into a single data frame
> combined_data <- data.frame(
+     Bacteria = rep(top_bacteria_names, each = nrow(data)),
+     Abundance = c(data$Bacteroides, data$Pseudomonas, data$Terrabacter),
+     Stage = rep(data$Stage, times = 3)
+ )
> 
> # Remove rows with NAs
> combined_data <- na.omit(combined_data)
> 
> # Check the number of rows in the combined data after removing NAs
> print(paste("Number of rows after removing NAs: ", nrow(combined_data)))
[1] "Number of rows after removing NAs:  54"
> 
> # Filter out rows with missing values in the Stage column
> combined_data <- combined_data[!is.na(combined_data$Stage), ]
> 
> # Check the number of rows after filtering
> print(paste("Number of rows after filtering: ", nrow(combined_data)))
[1] "Number of rows after filtering:  54"
> 
> # Create a folder to save the plot and data
> dir.create("boxplots", showWarnings = FALSE)
> 
> # Perform Kruskal-Wallis test and save p-values
> kruskal_results <- combined_data %>%
+     group_by(Bacteria) %>%
+     summarize(
+         avg_abundance = mean(Abundance, na.rm = TRUE),
+         kruskal_p_value = kruskal.test(Abundance ~ Stage)$p.value
+     )
> 
> # Apply Bonferroni correction
> kruskal_results$bonferroni_p_value <- p.adjust(kruskal_results$kruskal_p_value, method = "bonferroni")
> 
> # Save the data with p-values to a CSV file
> write.csv(
+     kruskal_results,
+     "boxplots/kruskal_results_with_p_values.csv",
+     row.names = FALSE
+ )
> 
> # Print the Kruskal-Wallis results
> print(kruskal_results)
# A tibble: 3 × 4
  Bacteria    avg_abundance kruskal_p_value bonferroni_p_value
  <chr>               <dbl>           <dbl>              <dbl>
1 Bacteroides          17.1           0.772              1    
2 Pseudomonas          17.7           0.630              1    
3 Terrabacter          17.4           0.210              0.631
> 
> # Create a grouped boxplot with y-axis as relative abundance
> p <- ggplot(combined_data, aes(x = Stage, y = Abundance, fill = Bacteria)) +
+     geom_boxplot() +
+     labs(
+         title = "Grouped Boxplot for Bacteria in Gum by Tumor Stage",
+         y = "Relative Abundance",
+         x = "Tumor Stage"
+     ) +
+     scale_fill_manual(values = top_bacteria_colors) +  # Assign specified colors
+     geom_text(
+         aes(x = 2, y = max(combined_data$Abundance) * 0.9, 
+             label = paste("p =", round(kruskal_results$bonferroni_p_value[1], 4))),
+         vjust = -3,  # Adjust the vertical position
+         size = 4,
+         color = "black"
+     )
> 
> # Save the grouped boxplot as a PNG file
> ggsave(
+     p,
+     file = "bacteria_gum_boxplots/grouped_boxplot_relative_abundance.png",
+     width = 10,
+     height = 6,
+     dpi = 300
+ )
> 
> 
> # Load required libraries
> library(tidyr)
> library(dplyr)
> library(ggplot2)
> 
> # Specify the names of the top bacteria and their corresponding colors
> top_bacteria_colors <- c("Bacteroides" = "#E41A1C", "Pseudomonas" = "#377EB8", "Terrabacter" = "#4DAF4A")
> 
> # Specify the names of the top bacteria
> top_bacteria_names <- c("Bacteroides", "Pseudomonas", "Terrabacter")
> 
> # Combine the data for all three bacteria into a single data frame
> combined_data <- data.frame(
+     Bacteria = rep(top_bacteria_names, each = nrow(data)),
+     Abundance = c(data$Bacteroides, data$Pseudomonas, data$Terrabacter),
+     Stage = rep(data$Stage, times = 3)
+ )
> 
> # Remove rows with NAs
> combined_data <- na.omit(combined_data)
> 
> # Check the number of rows in the combined data after removing NAs
> print(paste("Number of rows after removing NAs: ", nrow(combined_data)))
[1] "Number of rows after removing NAs:  54"
> 
> # Filter out rows with missing values in the Stage column
> combined_data <- combined_data[!is.na(combined_data$Stage), ]
> 
> # Check the number of rows after filtering
> print(paste("Number of rows after filtering: ", nrow(combined_data)))
[1] "Number of rows after filtering:  54"
> 
> # Create a folder to save the plot and data
> dir.create("boxplots", showWarnings = FALSE)
> 
> # Perform Kruskal-Wallis test and save p-values
> kruskal_results <- combined_data %>%
+     group_by(Bacteria) %>%
+     summarize(
+         avg_abundance = mean(Abundance, na.rm = TRUE),
+         kruskal_p_value = kruskal.test(Abundance ~ Stage)$p.value
+     )
> 
> # Apply Bonferroni correction
> kruskal_results$bonferroni_p_value <- p.adjust(kruskal_results$kruskal_p_value, method = "bonferroni")
> 
> # Save the data with p-values to a CSV file
> write.csv(
+     kruskal_results,
+     "boxplots/kruskal_results_with_p_values.csv",
+     row.names = FALSE
+ )
> 
> # Print the Kruskal-Wallis results
> print(kruskal_results)
# A tibble: 3 × 4
  Bacteria    avg_abundance kruskal_p_value bonferroni_p_value
  <chr>               <dbl>           <dbl>              <dbl>
1 Bacteroides          17.1           0.772              1    
2 Pseudomonas          17.7           0.630              1    
3 Terrabacter          17.4           0.210              0.631
> 
> # Create a grouped boxplot with y-axis as relative abundance
> p <- ggplot(combined_data, aes(x = Stage, y = Abundance, fill = Bacteria)) +
+     geom_boxplot() +
+     labs(
+         title = "Grouped Boxplot for Bacteria in Gum by Tumor Stage",
+         y = "Relative Abundance",
+         x = "Tumor Stage"
+     ) +
+     scale_fill_manual(values = top_bacteria_colors) +  # Assign specified colors
+     geom_text(
+         aes(x = 2, y = max(combined_data$Abundance) * 0.9, 
+             label = paste("p =", round(kruskal_results$bonferroni_p_value[1], 4))),
+         vjust = -6,  # Adjust the vertical position
+         size = 4,
+         color = "black"
+     )
> 
> # Save the grouped boxplot as a PNG file
> ggsave(
+     p,
+     file = "bacteria_gum_boxplots/grouped_boxplot_relative_abundance.png",
+     width = 10,
+     height = 6,
+     dpi = 300
+ )
> 
> 
> # Load required libraries
> library(tidyr)
> library(dplyr)
> library(ggplot2)
> 
> # Specify the names of the top bacteria and their corresponding colors
> top_bacteria_colors <- c("Bacteroides" = "#E41A1C", "Pseudomonas" = "#377EB8", "Terrabacter" = "#4DAF4A")
> 
> # Specify the names of the top bacteria
> top_bacteria_names <- c("Bacteroides", "Pseudomonas", "Terrabacter")
> 
> # Combine the data for all three bacteria into a single data frame
> combined_data <- data.frame(
+     Bacteria = rep(top_bacteria_names, each = nrow(data)),
+     Abundance = c(data$Bacteroides, data$Pseudomonas, data$Terrabacter),
+     Stage = rep(data$Stage, times = 3)
+ )
> 
> # Remove rows with NAs
> combined_data <- na.omit(combined_data)
> 
> # Check the number of rows in the combined data after removing NAs
> print(paste("Number of rows after removing NAs: ", nrow(combined_data)))
[1] "Number of rows after removing NAs:  54"
> 
> # Filter out rows with missing values in the Stage column
> combined_data <- combined_data[!is.na(combined_data$Stage), ]
> 
> # Check the number of rows after filtering
> print(paste("Number of rows after filtering: ", nrow(combined_data)))
[1] "Number of rows after filtering:  54"
> 
> # Create a folder to save the plot and data
> dir.create("boxplots", showWarnings = FALSE)
> 
> # Perform Kruskal-Wallis test and save p-values
> kruskal_results <- combined_data %>%
+     group_by(Bacteria) %>%
+     summarize(
+         avg_abundance = mean(Abundance, na.rm = TRUE),
+         kruskal_p_value = kruskal.test(Abundance ~ Stage)$p.value
+     )
> 
> # Apply Bonferroni correction
> kruskal_results$bonferroni_p_value <- p.adjust(kruskal_results$kruskal_p_value, method = "bonferroni")
> 
> # Save the data with p-values to a CSV file
> write.csv(
+     kruskal_results,
+     "boxplots/kruskal_results_with_p_values.csv",
+     row.names = FALSE
+ )
> 
> # Print the Kruskal-Wallis results
> print(kruskal_results)
# A tibble: 3 × 4
  Bacteria    avg_abundance kruskal_p_value bonferroni_p_value
  <chr>               <dbl>           <dbl>              <dbl>
1 Bacteroides          17.1           0.772              1    
2 Pseudomonas          17.7           0.630              1    
3 Terrabacter          17.4           0.210              0.631
> 
> # Create a grouped boxplot with y-axis as relative abundance
> p <- ggplot(combined_data, aes(x = Stage, y = Abundance, fill = Bacteria)) +
+     geom_boxplot() +
+     labs(
+         title = "Grouped Boxplot for Bacteria in Gum by Tumor Stage",
+         y = "Relative Abundance",
+         x = "Tumor Stage"
+     ) +
+     scale_fill_manual(values = top_bacteria_colors) +  # Assign specified colors
+     geom_text(
+         aes(x = 2, y = max(combined_data$Abundance) * 0.9, 
+             label = paste("p =", round(kruskal_results$bonferroni_p_value[1], 4))),
+         vjust = -9,  # Adjust the vertical position
+         size = 4,
+         color = "black"
+     )
> 
> # Save the grouped boxplot as a PNG file
> ggsave(
+     p,
+     file = "bacteria_gum_boxplots/grouped_boxplot_relative_abundance.png",
+     width = 10,
+     height = 6,
+     dpi = 300
+ )
> 